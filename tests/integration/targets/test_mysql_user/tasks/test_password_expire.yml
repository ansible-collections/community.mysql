---
# Tests scenarios for password_expire

- vars:
    mysql_parameters: &mysql_params
      login_user: "{{ mysql_user }}"
      login_password: "{{ mysql_password }}"
      login_host: "{{ mysql_host }}"
      login_port: "{{ mysql_primary_port }}"

  block:
    - include_tasks: utils/assert_user_password_expire.yml
      vars:
        username: "{{ item.username }}"
        host: "{{ item.host | default('localhost')}}"
        password_expire: "{{ item.password_expire }}"
        password: "{{ user_password_1 }}"
        expect_change: "{{ item.expect_change }}"
        expect_password_expire_change: "{{ item.expect_password_expire_change }}"
        expected_password_lifetime: "{{ item.expected_password_lifetime }}"
        password_expire_interval: "{{ item.password_expire_interval | default(omit) }}"
        expected_password_expired: "{{ item.expected_password_expired }}"
        check_mode: "{{ item.check_mode | default(omit) }}"
      loop:
        # all variants set the password when nothing exists
        # never expires
        - username: "{{ user_name_1 }}"
          host: "%"
          password_expire: never
          expect_change: true
          expected_password_lifetime: "0"
          expected_password_expired: "N"
        # expires ussing default policy
        - username: "{{ user_name_2 }}"
          password_expire: default
          expect_change: true
          expected_password_lifetime: "-1"
          expected_password_expired: "N"
        # expires ussing interval
        - username: "{{ user_name_3 }}"
          password_expire: interval
          password_expire_interval: "10"
          expect_change: true
          expected_password_lifetime: "10"
          expected_password_expired: "N"

        # assert idempotency
        - username: "{{ user_name_1 }}"
          host: "%"
          password_expire: never
          expect_change: false
          expected_password_lifetime: "0"
          expected_password_expired: "N"
        - username: "{{ user_name_2 }}"
          password_expire: default
          expect_change: false
          expected_password_lifetime: "-1"
          expected_password_expired: "N"
        - username: "{{ user_name_3 }}"
          password_expire: interval
          password_expire_interval: "10"
          expect_change: false
          expected_password_lifetime: "10"
          expected_password_expired: "N"

        # assert change is made
        - username: "{{ user_name_3 }}"
          password_expire: never
          expect_change: true
          expected_password_lifetime: "0"
          expected_password_expired: "N"
        - username: "{{ user_name_1 }}"
          host: "%"
          password_expire: default
          expect_change: true
          expected_password_lifetime: "-1"
          expected_password_expired: "N"
        - username: "{{ user_name_2 }}"
          password_expire: interval
          password_expire_interval: "100"
          expect_change: true
          expected_password_lifetime: "100"
          expected_password_expired: "N"

        # assert password expires now
        - username: "{{ user_name_1 }}"
          host: "%"
          password_expire: now
          expect_change: true
          expected_password_lifetime: "-1" # password lifetime should be the same
          expected_password_expired: "Y"
        - username: "{{ user_name_2 }}"
          password_expire: now
          expect_change: true
          expected_password_lifetime: "100" # password lifetime should be the same
          expected_password_expired: "Y"

        # assert idempotency password expires now
        - username: "{{ user_name_1 }}"
          host: "%"
          password_expire: now
          expect_change: false
          expected_password_lifetime: "-1" # password lifetime should be the same
          expected_password_expired: "Y"
        - username: "{{ user_name_2 }}"
          password_expire: now
          expect_change: false
          expected_password_lifetime: "100" # password lifetime should be the same
          expected_password_expired: "Y"

        # assert check_mode
        - username: "{{ user_name_3 }}"
          password_expire: interval
          password_expire_interval: 10
          check_mode: true
          expect_change: false
          expected_password_lifetime: "0"
          expected_password_expired: "N"

    - name: password_expire | Set password_expire = interval without password_expire_interval
      community.mysql.mysql_user:
        <<: *mysql_params
        name: '{{ user_name_4 }}'
        host: '%'
        password: '{{ user_password_4 }}'
        password_expire: interval
        state: present
      register: result
      ignore_errors: true

    - name: password_expire | Assert that action fails if 'password_expire_interval' not set
      ansible.builtin.assert:
        that:
          - result is failed

    - name: password_expire | Set password_expire_interval < 1
      community.mysql.mysql_user:
        <<: *mysql_params
        name: '{{ user_name_4 }}'
        host: '%'
        password: '{{ user_password_4 }}'
        password_expire: interval
        password_expire_interval: -1
        state: present
      register: result
      ignore_errors: true

    - name: password_expire | Assert that action fails if 'password_expire_interval' is < 1
      ansible.builtin.assert:
        that:
          - result is failed
          - "'should be positive number' in result.msg"

    - name: password_expire | check mode for user creation
      community.mysql.mysql_user:
        <<: *mysql_params
        name: '{{ user_name_4 }}'
        host: '%'
        password: '{{ user_password_4 }}'
        password_expire: interval
        password_expire_interval: 20
        state: present
      register: result
      check_mode: True
      failed_when: result is changed

    - include_tasks: utils/remove_user.yml
      vars:
          user_name: "{{ item.username }}"
      loop:
        - username: "{{ user_name_1 }}"
        - username: "{{ user_name_2 }}"
        - username: "{{ user_name_3 }}"
        - username: "{{ user_name_4 }}"
