---

- vars:
    mysql_parameters: &mysql_params
      login_user: '{{ mysql_user }}'
      login_password: '{{ mysql_password }}'
      login_host: '{{ mysql_host }}'
      login_port: '{{ mysql_primary_port }}'

  block:

    # ========================= Prepare =======================================
    # We use query to prevent our module of changing the case
    - name: Mysql_role Column case sensitive | Create a test table
      community.mysql.mysql_query:
        <<: *mysql_params
        query:
          - CREATE DATABASE mysql_role_column_case
          - >-
            CREATE TABLE mysql_role_column_case.t1
            (a int, B int, cC int, Dd int)
          - >-
            INSERT INTO mysql_role_column_case.t1
            (a, B, cC, Dd) VALUES (1,2,3,4)

    - name: Mysql_role Column case sensitive | Create users
      community.mysql.mysql_user:
        <<: *mysql_params
        name: column_case_sensitive
        host: '%'
        password: 'msandbox'

    # ================= Reproduce failure =====================================

    - name: Mysql_role Column case sensitive | Create role
      community.mysql.mysql_role:
        <<: *mysql_params
        name: 'role_column_case_sensitive'
        state: present
        members:
          - 'column_case_sensitive@%'
        priv:
          'mysql_role_column_case.t1': 'SELECT(a, B, cC, Dd)'

    - name: Mysql_role Column case sensitive | Assert role privileges are all caps
      community.mysql.mysql_query:
        <<: *mysql_params
        query:
          - SHOW GRANTS FOR role_column_case_sensitive
      register: column_case_insensitive_grants
      failed_when:
        # Column order may vary, thus test each separately
        - >-
          column_case_insensitive_grants.query_result[0][1]
          is not search("A", ignorecase=false)
          or column_case_insensitive_grants.query_result[0][1]
          is not search("B", ignorecase=false)
          or column_case_insensitive_grants.query_result[0][1]
          is not search("CC", ignorecase=false)
          or column_case_insensitive_grants.query_result[0][1]
          is not search("DD", ignorecase=false)

    - name: Mysql_role Column case sensitive | Assert 1 column is accessible on MySQL
      community.mysql.mysql_query:
        <<: *mysql_params
        login_user: column_case_sensitive
        query:
          - DESC mysql_role_column_case.t1
      register: assert_1_col_accessible
      failed_when:
        - assert_1_col_accessible.rowcount[0] | int != 1
      when:
        - db_engine == 'mysql'

    - name: Mysql_role Column case sensitive | Assert 4 column are accessible on MariaDB
      community.mysql.mysql_query:
        <<: *mysql_params
        login_user: column_case_sensitive
        query:
          - SET ROLE role_column_case_sensitive
          - DESC mysql_role_column_case.t1
      register: assert_4_col_accessible
      failed_when:
        - assert_4_col_accessible.rowcount[1] | int != 4
      when:
        - db_engine == 'mariadb'

    # ====================== Test the fix =====================================

    - name: Mysql_role Column case sensitive | Recreate role with case sensitive
      community.mysql.mysql_role:
        <<: *mysql_params
        name: 'role_column_case_sensitive'
        state: present
        members:
          - 'column_case_sensitive@%'
        priv:
          'mysql_role_column_case.t1': 'SELECT(a, B, cC, Dd)'
        column_case_sensitive: true

    - name: Mysql_role Column case sensitive | Assert role privileges are case sensitive
      community.mysql.mysql_query:
        <<: *mysql_params
        query:
          - SHOW GRANTS FOR role_column_case_sensitive
      register: column_case_sensitive_grants
      failed_when:
        # Column order may vary, thus test each separately
        - >-
          column_case_sensitive_grants.query_result[0][1]
          is not search("a", ignorecase=false)
          or column_case_sensitive_grants.query_result[0][1]
          is not search("B", ignorecase=false)
          or column_case_sensitive_grants.query_result[0][1]
          is not search("cC", ignorecase=false)
          or column_case_sensitive_grants.query_result[0][1]
          is not search("Dd", ignorecase=false)

    - name: Mysql_role Column case sensitive | Assert 4 columns are accessible
      community.mysql.mysql_query:
        <<: *mysql_params
        login_user: column_case_sensitive
        query:
          - SET ROLE role_column_case_sensitive
          - DESC mysql_role_column_case.t1
      register: assert_4_col_accessible
      failed_when:
        - assert_4_col_accessible.rowcount[1] | int != 4

    # ========================= Teardown ======================================

    - name: Mysql_role Column case sensitive | Delete test users
      community.mysql.mysql_user:
        <<: *mysql_params
        name: column_case_sensitive
        host_all: true
        state: absent

    - name: Mysql_role Column case sensitive | Delete role
      community.mysql.mysql_role:
        <<: *mysql_params
        name: 'role_column_case_sensitive'
        state: absent

    - name: Mysql_role Column case sensitive | Delete test database
      community.mysql.mysql_db:
        <<: *mysql_params
        name: mysql_role_column_case
        state: absent
