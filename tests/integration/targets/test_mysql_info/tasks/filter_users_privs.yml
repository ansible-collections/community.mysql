---

- module_defaults:
    community.mysql.mysql_db: &mysql_defaults
      login_user: "{{ mysql_user }}"
      login_password: "{{ mysql_password }}"
      login_host: "{{ mysql_host }}"
      login_port: "{{ mysql_primary_port }}"
    community.mysql.mysql_query: *mysql_defaults
    community.mysql.mysql_info: *mysql_defaults
    community.mysql.mysql_user: *mysql_defaults

  block:

    # ================================ Prepare ==============================
    - name: Mysql_info users_privs | Create databases
      community.mysql.mysql_db:
        name: users_privs_db
        state: present

    - name: Mysql_info users_privs | Create tables
      community.mysql.mysql_query:
        query:
          - >
            CREATE TABLE IF NOT EXISTS users_privs_db.t1
            (id int, name varchar(9))

    # I failed to create a procedure using community.mysql.mysql_query.
    # Maybe it's because we must changed the delimiter.
    - name: Mysql_info users_privs | Create procedure SQL file
      ansible.builtin.template:
        src: files/users_privs_create_procedure.sql
        dest: /root/create_procedure.sql
        owner: root
        group: root
        mode: '0700'

    - name: Mysql_info users_privs | Create a procedure
      community.mysql.mysql_db:
        name: all
        state: import
        target: /root/create_procedure.sql

    - name: Mysql_info users_privs | Prepare common tests users
      community.mysql.mysql_user:
        name: "{{ item.user }}"
        host: "users_privs.com"
        password: '*6C387FC3893DBA1E3BA155E74754DA6682D04747'
        encrypted: true
        priv: "{{ item.privs }}"
        resource_limits: "{{ item.resource_limits | default(omit) }}"
        state: present
      loop:
        - user: users_privs_adm
          privs:
            '*.*': 'ALL,GRANT'
        - user: users_privs_schema
          privs:
            'users_privs_db.*': 'SELECT,INSERT,UPDATE,DELETE'
        - user: users_privs_table
          privs:
            'users_privs_db.t1': 'SELECT,INSERT,UPDATE'
        - user: users_privs_col
          privs:
            'users_privs_db.t1': 'SELECT (id)'
          resource_limits:
            MAX_USER_CONNECTIONS: 100
        - user: users_privs_proc
          privs:
            'PROCEDURE users_privs_db.get_all_items': 'EXECUTE'
          resource_limits:
            MAX_USER_CONNECTIONS: 2
            MAX_CONNECTIONS_PER_HOUR: 60
        - user: users_privs_multi
          privs:
            'mysql.*': 'SELECT'
            'users_privs_db.*': 'SELECT'

    - name: Mysql_info users_privs | Prepare tests users for MariaDB
      community.mysql.mysql_user:
        name: "{{ item.user }}"
        host: "users_privs.com"
        plugin: "{{ item.plugin | default(omit) }}"
        plugin_auth_string: "{{ item.plugin_auth_string | default(omit) }}"
        plugin_hash_string: "{{ item.plugin_hash_string | default(omit) }}"
        tls_require: "{{ item.tls_require | default(omit) }}"
        priv: "{{ item.privs }}"
        resource_limits: "{{ item.resource_limits | default(omit) }}"
        state: present
      loop:
        - user: users_privs_socket  # Only for MariaDB
          privs:
            '*.*': 'ALL'
          plugin: 'unix_socket'
      when:
        - db_engine == 'mariadb'

    - name: Mysql_info users_privs | Prepare tests users for MySQL
      community.mysql.mysql_user:
        name: "{{ item.user }}"
        host: "users_privs.com"
        password: "{{ item.password | default(omit) }}"
        encrypted: true
        plugin: "{{ item.plugin | default(omit) }}"
        plugin_auth_string: "{{ item.plugin_auth_string | default(omit) }}"
        plugin_hash_string: "{{ item.plugin_hash_string | default(omit) }}"
        tls_require: "{{ item.tls_require | default(omit) }}"
        priv: "{{ item.privs }}"
        resource_limits: "{{ item.resource_limits | default(omit) }}"
        state: present
      loop:
        - user: users_privs_sha256  # Only for MySQL
          privs:
            '*.*': 'ALL'
          plugin_auth_string:
            '$5$/<w*D`L4\"F$WQiI1Pev.7atAh8udYs3wqlzgdfV8LXoy7rqSEC7NF2'
          plugin: 'sha256_password'
      when:
        - db_engine == 'mysql'

    - name: Mysql_info users_privs | Prepare tests users for MySQL 8+
      community.mysql.mysql_user:
        name: "{{ item.user }}"
        host: "users_privs.com"
        password: "{{ item.password | default(omit) }}"
        encrypted: true
        plugin: "{{ item.plugin | default(omit) }}"
        plugin_auth_string: "{{ item.plugin_auth_string | default(omit) }}"
        plugin_hash_string: "{{ item.plugin_hash_string | default(omit) }}"
        tls_require: "{{ item.tls_require | default(omit) }}"
        priv: "{{ item.privs }}"
        resource_limits: "{{ item.resource_limits | default(omit) }}"
        state: present
      loop:
        - user: users_privs_caching_sha2  # Only for MySQL 8+
          privs:
            '*.*': 'ALL'
          plugin_auth_string:
            '$A$005$61j/uF%Qb4-=O2xkeO82u2HNkF.lxDq0liO4U3xqi7bDUCbWM6HayRXWn1'
          plugin: 'caching_sha2_password'
      when:
        - db_engine == 'mysql'
        - db_version is version('8.0', '>=')

    # ================================== Tests ==============================

    - name: Mysql_info users_privs | Collect users_privs
      community.mysql.mysql_info:
        filter:
          - users_privs
      register: result

    - debug: var=result

    - name: Insert the users privileges as input of mysql_user
      community.mysql.mysql_user:
        name: "{{ item.user }}"
        host: "{{ item.host }}"
        password: "{{ item.password | default(omit) }}"
        encrypted: "{{ item.encrypted | default(omit) }}"
        plugin: "{{ item.plugin | default(omit) }}"
        plugin_auth_string: "{{ item.plugin_auth_string | default(omit) }}"
        plugin_hash_string: "{{ item.plugin_hash_string | default(omit) }}"
        tls_require: "{{ item.tls_require | default(omit) }}"
        priv: "{{ item.priv | default(omit) }}"
        resource_limits: "{{ item.resource_limits | default(omit) }}"
        state: present
      loop: "{{ result.users_privs }}"

    # ================================== Cleanup ============================

    - name: Mysql_info users_privs | Cleanup databases
      community.mysql.mysql_db:
        name: users_privs_db
        state: absent

    - name: Mysql_info users_privs | Cleanup users_privs
      community.mysql.mysql_user:
        name: "{{ item }}"
        host: "users_privs.com"
        state: absent
      loop:
        - users_privs_adm
        - users_privs_schema
        - users_privs_table
        - users_privs_col
        - users_privs_proc

    - name: Mysql_info users_privs | Cleanup sql file for the procedure
      ansible.builtin.file:
        path: /root/create_procedure.sql
        state: absent
