---

- vars:
    mysql_parameters: &mysql_params
      login_user: '{{ mysql_user }}'
      login_password: '{{ mysql_password }}'
      login_host: '{{ mysql_host }}'
      login_port: '{{ mysql_primary_port }}'

  block:

    # ========================= Prepare =======================================
    - name: Mysql_user Lock user | Create a test database
      community.mysql.mysql_db:
        <<: *mysql_params
        name: mysql_lock_user_test
        state: present

    # ========================== Tests ========================================

    - name: Mysql_user Lock user | create locked | Create test user
      community.mysql.mysql_user:
        <<: *mysql_params
        name: mysql_locked_user
        password: 'msandbox'
        locked: true
        priv:
          'mysql_lock_user_test.*': 'SELECT'

    - name: Mysql_user Lock user | create locked | Assert that test user is locked
      community.mysql.mysql_query:
        <<: *mysql_params
        query:
          - SHOW CREATE USER 'mysql_locked_user'@'localhost'
      register: locked_user_creation
      failed_when:
        - locked_user_creation.query_result[0][0] is not search('ACCOUNT LOCK')

    - name: 'Mysql_user Lock user | create locked | Idempotence check'
      check_mode: true
      community.mysql.mysql_user:
        <<: *mysql_params
        name: mysql_locked_user
        locked: true
        priv:
          'mysql_lock_user_test.*': 'SELECT'
      register: idempotence_check
      failed_when: idempotence_check is changed

    - name: 'Mysql_user Lock user | create locked | Check that absense of locked does not unlock the user'
      check_mode: true
      community.mysql.mysql_user:
        <<: *mysql_params
        name: mysql_locked_user
        priv:
          'mysql_lock_user_test.*': 'SELECT'
      register: idempotence_check
      failed_when: idempotence_check is changed

    - name: 'Mysql_user Lock user | create locked | Unlock test user check_mode: true'
      check_mode: true
      community.mysql.mysql_user:
        <<: *mysql_params
        name: mysql_locked_user
        locked: false
        priv:
          'mysql_lock_user_test.*': 'SELECT'

    - name: Mysql_user Lock user | create locked | Assert that test user is locked
      community.mysql.mysql_query:
        <<: *mysql_params
        query:
          - SHOW CREATE USER 'mysql_locked_user'@'localhost'
      register: locked_user_creation
      failed_when:
        - locked_user_creation.query_result[0][0] is not search('ACCOUNT LOCK')

    - name: Mysql_user Lock user | create locked | Unlock test user
      community.mysql.mysql_user:
        <<: *mysql_params
        name: mysql_locked_user
        locked: false
        priv:
          'mysql_lock_user_test.*': 'SELECT'

    - name: Mysql_user Lock user | create locked | Assert that test user is not locked
      community.mysql.mysql_query:
        <<: *mysql_params
        query:
          - SHOW CREATE USER 'mysql_locked_user'@'localhost'
      register: locked_user_creation
      failed_when:
        - locked_user_creation.query_result[0][0] is search('ACCOUNT LOCK')

    - name: Mysql_user Lock user | create locked | Remove test user
      community.mysql.mysql_user:
        <<: *mysql_params
        name: mysql_locked_user
        state: absent
        
    - name: Mysql_user Lock user | create unlocked | Create test user
      community.mysql.mysql_user:
        <<: *mysql_params
        name: mysql_locked_user
        password: 'msandbox'
        locked: false
        priv:
          'mysql_lock_user_test.*': 'SELECT'

    - name: Mysql_user Lock user | create unlocked | Assert that test user is not locked
      community.mysql.mysql_query:
        <<: *mysql_params
        query:
          - SHOW CREATE USER 'mysql_locked_user'@'localhost'
      register: locked_user_creation
      failed_when:
        - locked_user_creation.query_result[0][0] is search('ACCOUNT LOCK')

    - name: 'Mysql_user Lock user | create unlocked | Idempotence check'
      check_mode: true
      community.mysql.mysql_user:
        <<: *mysql_params
        name: mysql_locked_user
        locked: false
        priv:
          'mysql_lock_user_test.*': 'SELECT'
      register: idempotence_check
      failed_when: idempotence_check is changed

    - name: 'Mysql_user Lock user | create unlocked | Lock test user check_mode: true'
      check_mode: true
      community.mysql.mysql_user:
        <<: *mysql_params
        name: mysql_locked_user
        locked: true
        priv:
          'mysql_lock_user_test.*': 'SELECT'

    - name: Mysql_user Lock user | create unlocked | Assert that test user is not locked
      community.mysql.mysql_query:
        <<: *mysql_params
        query:
          - SHOW CREATE USER 'mysql_locked_user'@'localhost'
      register: locked_user_creation
      failed_when:
        - locked_user_creation.query_result[0][0] is search('ACCOUNT LOCK')

    - name: Mysql_user Lock user | create unlocked | Lock test user
      community.mysql.mysql_user:
        <<: *mysql_params
        name: mysql_locked_user
        locked: true
        priv:
          'mysql_lock_user_test.*': 'SELECT'

    - name: Mysql_user Lock user | create unlocked | Assert that test user is locked
      community.mysql.mysql_query:
        <<: *mysql_params
        query:
          - SHOW CREATE USER 'mysql_locked_user'@'localhost'
      register: locked_user_creation
      failed_when:
        - locked_user_creation.query_result[0][0] is not search('ACCOUNT LOCK')

    - name: Mysql_user Lock user | create unlocked | Remove test user
      community.mysql.mysql_user:
        <<: *mysql_params
        name: mysql_locked_user
        state: absent

    - name: Mysql_user Lock user | create default | Create test user
      community.mysql.mysql_user:
        <<: *mysql_params
        name: mysql_locked_user
        password: 'msandbox'
        priv:
          'mysql_lock_user_test.*': 'SELECT'

    - name: Mysql_user Lock user | create default | Assert that test user is not locked
      community.mysql.mysql_query:
        <<: *mysql_params
        query:
          - SHOW CREATE USER 'mysql_locked_user'@'localhost'
      register: locked_user_creation
      failed_when:
        - locked_user_creation.query_result[0][0] is search('ACCOUNT LOCK')

    - name: Mysql_user Lock user | create default | Remove test user
      community.mysql.mysql_user:
        <<: *mysql_params
        name: mysql_locked_user
        state: absent

    # ========================= Teardown ======================================

    - name: Mysql_user Lock user | Delete test database
      community.mysql.mysql_db:
        <<: *mysql_params
        name: mysql_lock_user_test
        state: absent
