####################################################################
# WARNING: These are designed specifically for Ansible tests       #
# and should not be used as examples of how to write Ansible roles #
####################################################################

# test code for the mysql_db module
# (c) 2014,  Wayne Rosario <wrosario@ansible.com>

# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.

- name: alias mysql command to include default options
  set_fact:
    mysql_command: "mysql -u{{ mysql_user }} -p{{ mysql_password }} -P{{ mysql_primary_port }} --protocol=tcp"

- name: Check state present/absent
  include_tasks: state_present_absent.yml
  vars:
    db_name: "{{ item }}"
  loop: "{{ db_names }}"

- name: Check state dump/import
  include_tasks: state_dump_import.yml
  vars:
    db_name: "{{ item.0 }}"
    file: "{{ item.1.file }}"
    file2: "{{ item.1.file2 }}"
    file3: "{{ item.1.file3 }}"
    file4: "{{ item.1.file4 }}"
    format_msg_type: "{{ item.1.format_msg_type }}"
    format_type: "{{ item.1.format_type }}"
  with_nested:
    - "{{ db_names }}"
    - "{{ db_formats }}"

- name: Check state present/absent with multiple databases
  include_tasks: multi_db_create_delete.yml

- name: Check state dump/import with encoding
  include_tasks: encoding_dump_import.yml
  vars:
    file: "latin1.sql"
    format_msg_type: "ASCII"

- name: Check MySQL config file
  include_tasks: config_overrides_defaults.yml
  when: ansible_python.version_info[0] >= 3

- name: Check issue 28
  include_tasks: issue-28.yml
  vars:
    db_name: "{{ item }}"
  loop: "{{ db_names }}"
