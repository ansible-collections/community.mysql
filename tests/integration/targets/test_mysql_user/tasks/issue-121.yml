---
- vars:
    mysql_parameters: &mysql_params
      login_user: '{{ mysql_user }}'
      login_password: '{{ mysql_password }}'
      login_host: 127.0.0.1
      login_port: '{{ mysql_primary_port }}'

  block:

    # ============================================================
    - shell: pip show pymysql | awk '/Version/ {print $2}'
      register: pymysql_version

    - name: get server certificate
      copy:
        content: "{{ lookup('pipe', \"openssl s_client -starttls mysql -connect localhost:3307 -showcerts 2>/dev/null </dev/null |  sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p'\") }}"
        dest: /tmp/cert.pem
      delegate_to: localhost

    - name: get server version
      mysql_info:
        <<: *mysql_params
        filter: version
      register: db_version

    - set_fact:
        old_user_mgmt: "{{ db_version.version.major <= 5 and db_version.version.minor <= 6 or db_version.version.major == 10 and db_version.version.minor < 2 | bool }}"

    - name: Drop mysql user if exists
      mysql_user:
        <<: *mysql_params
        name: '{{ item }}'
        state: absent
      ignore_errors: yes
      with_items:
        - "{{ user_name_1 }}"
        - "{{ user_name_2 }}"

    - name: create user with REQUIRESSL privilege (expect failure)
      mysql_user:
        <<: *mysql_params
        name: "{{ user_name_1 }}"
        password: "{{ user_password_1 }}"
        priv: '*.*:SELECT,CREATE USER,REQUIRESSL,GRANT'
      register: result
      ignore_errors: yes

    - assert:
        that:
          - result is failed
          - result.msg is search('Error granting privileges')

    - name: create user with both REQUIRESSL privilege and an incompatible tls_requires option
      mysql_user:
        <<: *mysql_params
        name: "{{ user_name_1 }}"
        password: "{{ user_password_1 }}"
        priv: '*.*:SELECT,CREATE USER,REQUIRESSL,GRANT'
        tls_requires:
          X509:
      register: result
      ignore_errors: yes

    - assert:
        that:
          - result is failed
          - result.msg is search('Error granting privileges')

    - name: Drop mysql user
      mysql_user:
        <<: *mysql_params
        name: '{{ item }}'
        host: 127.0.0.1
        state: absent
      with_items:
        - "{{ user_name_1 }}"
        - "{{ user_name_2 }}"
