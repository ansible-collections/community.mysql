---
# Test code to ensure that subtracting privileges will not result in unnecessary changes.
- vars:
    mysql_parameters: &mysql_params
      login_user: '{{ mysql_user }}'
      login_password: '{{ mysql_password }}'
      login_host: '{{ mysql_host }}'
      login_port: '{{ mysql_primary_port }}'

  block:

    - name: Priv substract | Create test databases
      mysql_db:
        <<: *mysql_params
        name: '{{ item }}'
        state: present
      loop:
        - data1

    - name: Priv substract | Create a user with an initial set of privileges
      mysql_user:
        <<: *mysql_params
        name: '{{ user_name_4 }}'
        host: '%'
        password: '{{ user_password_4 }}'
        priv: 'data1.*:SELECT,INSERT'
        state: present

    - name: Priv substract | Run command to show privileges for user (expect privileges in stdout)
      command: "{{ mysql_command }} -e \"SHOW GRANTS FOR '{{ user_name_4 }}'@'%'\""
      register: result

    - name: Priv substract | Assert that the initial set of privileges matches what is expected
      assert:
        that:
          - "'GRANT SELECT, INSERT ON `data1`.*' in result.stdout"

    - name: Priv substract | Subtract privileges that are not in the current privileges, which should be a no-op
      mysql_user:
        <<: *mysql_params
        name: '{{ user_name_4 }}'
        host: '%'
        password: '{{ user_password_4 }}'
        priv: 'data1.*:DELETE'
        subtract_privs: yes
        state: present
      check_mode: '{{ enable_check_mode }}'
      register: result

    - name: Priv substract | Assert that there wasn't a change in permissions
      assert:
        that:
          - result is not changed

    - name: Priv substract | Run command to show privileges for user (expect privileges in stdout)
      command: "{{ mysql_command }} -e \"SHOW GRANTS FOR '{{ user_name_4 }}'@'%'\""
      register: result

    - name: Priv substract | Assert that the permissions still match what was originally granted
      assert:
        that:
          - "'GRANT SELECT, INSERT ON `data1`.*' in result.stdout"

    - name: Priv substract | Subtract existing and not-existing privileges, but not all
      mysql_user:
        <<: *mysql_params
        name: '{{ user_name_4 }}'
        host: '%'
        password: '{{ user_password_4 }}'
        priv: 'data1.*:INSERT,DELETE'
        subtract_privs: yes
        state: present
      check_mode: '{{ enable_check_mode }}'
      register: result

    - name: Priv substract | Assert that there was a change because permissions were/would be revoked on data1.*
      assert:
        that:
          - result is changed

    - name: Priv substract | Run command to show privileges for user (expect privileges in stdout)
      command: "{{ mysql_command }} -e \"SHOW GRANTS FOR '{{ user_name_4 }}'@'%'\""
      register: result

    - name: Priv substract | Assert that the permissions were not changed if check_mode is set to 'yes'
      assert:
        that:
          - "'GRANT SELECT, INSERT ON `data1`.*' in result.stdout"
      when: enable_check_mode == 'yes'

    - name: Priv substract | Assert that only DELETE was revoked if check_mode is set to 'no'
      assert:
        that:
          - "'GRANT SELECT ON `data1`.*' in result.stdout"
      when: enable_check_mode == 'no'

    - name: Priv substract | Try to subtract invalid privileges
      mysql_user:
        <<: *mysql_params
        name: '{{ user_name_4 }}'
        host: '%'
        password: '{{ user_password_4 }}'
        priv: 'data1.*:INVALID'
        subtract_privs: yes
        state: present
      check_mode: '{{ enable_check_mode }}'
      register: result

    - name: Priv substract | Assert that there was no change because invalid permissions are ignored
      assert:
        that:
          - result is not changed

    - name: Priv substract | Run command to show privileges for user (expect privileges in stdout)
      command: "{{ mysql_command }} -e \"SHOW GRANTS FOR '{{ user_name_4 }}'@'%'\""
      register: result

    - name: Priv substract | Assert that the permissions were not changed with check_mode=='yes'
      assert:
        that:
          - "'GRANT SELECT, INSERT ON `data1`.*' in result.stdout"
      when: enable_check_mode == 'yes'

    - name: Priv substract | Assert that the permissions were not changed with check_mode=='no'
      assert:
        that:
          - "'GRANT SELECT ON `data1`.*' in result.stdout"
      when: enable_check_mode == 'no'

    - name: Priv substract | Trigger failure by trying to subtract and append privileges at the same time
      mysql_user:
        <<: *mysql_params
        name: '{{ user_name_4 }}'
        host: '%'
        password: '{{ user_password_4 }}'
        priv: 'data1.*:SELECT'
        subtract_privs: yes
        append_privs: yes
        state: present
      check_mode: '{{ enable_check_mode }}'
      register: result
      ignore_errors: true

    - name: Priv substract | Assert the previous execution failed
      assert:
        that:
          - result is failed

    - name: Priv substract | Run command to show privileges for user (expect privileges in stdout)
      command: "{{ mysql_command }} -e \"SHOW GRANTS FOR '{{ user_name_4 }}'@'%'\""
      register: result

    - name: Priv substract | Assert that the permissions stayed the same, with check_mode=='yes'
      assert:
        that:
          - "'GRANT SELECT, INSERT ON `data1`.*' in result.stdout"
      when: enable_check_mode == 'yes'

    - name: Priv substract | Assert that the permissions stayed the same, with check_mode=='no'
      assert:
        that:
          - "'GRANT SELECT ON `data1`.*' in result.stdout"
      when: enable_check_mode == 'no'

    ##########
    # Clean up
    - name: Priv substract | Drop test databases
      mysql_db:
        <<: *mysql_params
        name: '{{ item }}'
        state: present
      loop:
        - data1

    - include_tasks: utils/remove_user.yml
      vars:
        user_name: "{{ user_name_4 }}"
